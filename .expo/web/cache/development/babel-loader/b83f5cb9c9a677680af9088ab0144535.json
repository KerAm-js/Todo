{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { colors } from \"./constants/colors\";\n\nvar TabBar = function TabBar(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: _objectSpread({}, styles.tabBar)\n  }, state.routes.map(function (route, index) {\n    var options = descriptors[route.key].options;\n    var isFocused = state.index === index;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n\n      if (!isFocused && !event.defaultPrevented) {\n        navigation.navigate({\n          name: route.name,\n          merge: true\n        });\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n\n    var image = React.createElement(Image, {\n      source: require(\"../images/home.png\"),\n      style: styles.image\n    });\n\n    if (isFocused) {\n      image = React.createElement(Image, {\n        source: require(\"../images/home_active.png\"),\n        style: styles.image\n      });\n    }\n\n    if (options.tabBarLabel === 'Tasks') {\n      if (isFocused) {\n        image = React.createElement(Image, {\n          source: require(\"../images/todo_list_active.png\"),\n          style: styles.image\n        });\n      } else {\n        image = React.createElement(Image, {\n          source: require(\"../images/todo_list.png\"),\n          style: styles.image\n        });\n      }\n    } else if (options.tabBarLabel === 'Profile') {\n      if (isFocused) {\n        image = React.createElement(Image, {\n          source: require(\"../images/user_active.png\"),\n          style: styles.image\n        });\n      } else {\n        image = React.createElement(Image, {\n          source: require(\"../images/user.png\"),\n          style: styles.image\n        });\n      }\n    }\n\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      accessibilityRole: \"button\",\n      accessibilityState: isFocused ? {\n        selected: true\n      } : {},\n      accessibilityLabel: options.tabBarAccessibilityLabel,\n      testID: options.tabBarTestID,\n      onPress: onPress,\n      onLongPress: onLongPress\n    }, image);\n  }));\n};\n\nexport default TabBar;\nvar styles = StyleSheet.create({\n  image: {\n    marginTop: 20,\n    width: 35,\n    height: 35\n  },\n  tabBar: {\n    flexDirection: 'row',\n    height: 90,\n    backgroundColor: colors.ACCENT,\n    justifyContent: 'space-between',\n    paddingHorizontal: 40,\n    borderRadius: 25\n  }\n});","map":{"version":3,"sources":["/Users/amirk/Documents/Todo/src/components/TabBar.js"],"names":["React","colors","TabBar","state","descriptors","navigation","styles","tabBar","routes","map","route","index","options","key","isFocused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","navigate","name","merge","onLongPress","image","require","tabBarLabel","selected","tabBarAccessibilityLabel","tabBarTestID","StyleSheet","create","marginTop","width","height","flexDirection","backgroundColor","ACCENT","justifyContent","paddingHorizontal","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Image, TouchableOpacity, StyleSheet } from 'react-native';\nimport { colors } from './constants/colors';\n\nconst TabBar = ({ state, descriptors, navigation }) => {\n\n  return ( \n      <View style={{...styles.tabBar}}>\n        {state.routes.map((route, index) => {\n          const { options } = descriptors[route.key];\n          const isFocused = state.index === index;\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!isFocused && !event.defaultPrevented) {\n              // The `merge: true` option makes sure that the params inside the tab screen are preserved\n              navigation.navigate({ name: route.name, merge: true });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          let image = <Image \n            source={require('../images/home.png')}\n            style={styles.image}\n          /> ;\n\n          if (isFocused) {\n            image = <Image \n              source={require('../images/home_active.png')}\n              style={styles.image}\n            /> ;\n          }\n\n          if (options.tabBarLabel === 'Tasks') {\n            if (isFocused) {\n              image = <Image \n                source={require('../images/todo_list_active.png')}\n                style={styles.image}\n              /> ;\n            } else {\n              image = <Image \n                source={require('../images/todo_list.png')}\n                style={styles.image}\n              /> ;\n            }\n\n          } else if (options.tabBarLabel === 'Profile') {\n            if (isFocused) {\n              image = <Image \n                source={require('../images/user_active.png')}\n                style={styles.image}\n              /> ;\n            } else {\n              image = <Image \n                source={require('../images/user.png')}\n                style={styles.image}\n              /> ;\n            }\n          }\n\n          return (\n            <TouchableOpacity\n              key={index}\n              accessibilityRole=\"button\"\n              accessibilityState={isFocused ? { selected: true } : {}}\n              accessibilityLabel={options.tabBarAccessibilityLabel}\n              testID={options.tabBarTestID}\n              onPress={onPress}\n              onLongPress={onLongPress}\n            >\n              {\n                image\n              }\n            </TouchableOpacity>\n          );\n        })}\n      </View> \n  );\n};\n\nexport default TabBar;\n\nconst styles = StyleSheet.create({\n  image: {\n    marginTop: 20,\n    width: 35,\n    height: 35,\n  },\n  tabBar: { \n    flexDirection: 'row', \n    height: 90, \n    backgroundColor: colors.ACCENT, \n    justifyContent: 'space-between',\n    paddingHorizontal: 40,\n    borderRadius: 25,\n  }\n})"]},"metadata":{},"sourceType":"module"}