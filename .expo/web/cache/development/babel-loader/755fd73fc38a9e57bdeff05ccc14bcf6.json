{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { colors } from \"../constants/colors\";\nimport DTPicker from \"../TimePicker\";\n\nvar TaskForm = function TaskForm(_ref) {\n  var task = _ref.task,\n      type = _ref.type,\n      closeModal = _ref.closeModal,\n      addTask = _ref.addTask,\n      editTask = _ref.editTask;\n\n  var _ref2 = type === 'add' ? useState('') : useState(task.text),\n      _ref3 = _slicedToArray(_ref2, 2),\n      text = _ref3[0],\n      setText = _ref3[1];\n\n  var _ref4 = type === 'add' ? useState('') : useState(task.description),\n      _ref5 = _slicedToArray(_ref4, 2),\n      description = _ref5[0],\n      setDescription = _ref5[1];\n\n  var _ref6 = type === 'add' ? useState(new Date()) : useState(task.date),\n      _ref7 = _slicedToArray(_ref6, 2),\n      date = _ref7[0],\n      setDate = _ref7[1];\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      disabled = _useState2[0],\n      setDisabled = _useState2[1];\n\n  var title = type === 'add' ? React.createElement(Text, {\n    style: styles.title\n  }, \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u0437\\u0430\\u0434\\u0430\\u0447\\u0430\") : React.createElement(Text, {\n    style: styles.title\n  }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\");\n\n  var setDefaults = function setDefaults() {\n    setText('');\n    setDescription('');\n  };\n\n  var onAdd = function onAdd() {\n    addTask(text, date, description);\n    closeModal();\n    setDefaults();\n  };\n\n  var onEdit = function onEdit() {\n    editTask(text, date, description);\n    closeModal();\n    setDefaults();\n  };\n\n  useEffect(function () {\n    if (text.trim() && date) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  });\n  var button = React.createElement(React.Fragment, null, type === 'add' ? React.createElement(Button, {\n    color: colors.BLUE,\n    title: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n    onPress: onAdd,\n    disabled: disabled\n  }) : React.createElement(Button, {\n    color: colors.BLUE,\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n    onPress: onEdit,\n    disabled: disabled\n  }));\n  return React.createElement(View, {\n    style: styles.container\n  }, title, React.createElement(TextInput, {\n    style: styles.input,\n    value: text,\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n  }), React.createElement(TextInput, {\n    style: _objectSpread(_objectSpread({}, styles.input), styles.textArea),\n    value: description,\n    onChangeText: function onChangeText(text) {\n      return setDescription(text);\n    },\n    multiline: true,\n    placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n  }), React.createElement(DTPicker, {\n    date: date,\n    setDate: setDate\n  }), React.createElement(View, {\n    style: styles.buttons\n  }, button, React.createElement(Button, {\n    color: colors.DANGER,\n    title: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n    onPress: closeModal\n  })));\n};\n\nexport default TaskForm;\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    backgroundColor: '#fff',\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    borderRadius: 20,\n    backgroundColor: colors.ACCENT\n  },\n  title: {\n    fontSize: 25,\n    textAlign: \"center\",\n    color: '#fff',\n    marginBottom: 20\n  },\n  input: {\n    backgroundColor: colors.LIGHTBLUE,\n    borderRadius: 15,\n    height: 50,\n    marginBottom: 15,\n    paddingHorizontal: 15,\n    fontSize: 20,\n    lineHeight: 27\n  },\n  textArea: {\n    height: 120\n  },\n  buttons: {}\n});","map":{"version":3,"sources":["/Users/amirk/Documents/Todo/src/components/Tasks/TaskForm.js"],"names":["React","useEffect","useState","colors","DTPicker","TaskForm","task","type","closeModal","addTask","editTask","text","setText","description","setDescription","Date","date","setDate","disabled","setDisabled","title","styles","setDefaults","onAdd","onEdit","trim","button","BLUE","container","input","textArea","buttons","DANGER","StyleSheet","create","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","ACCENT","fontSize","textAlign","color","marginBottom","LIGHTBLUE","height","lineHeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, StyleSheet, Text, TextInput, View } from \"react-native\";\nimport { colors } from \"../constants/colors\";\nimport DTPicker from \"../TimePicker\";\n\nconst TaskForm = ({task, type, closeModal, addTask, editTask}) => {\n\n  const [text, setText] = type === 'add' \n    ? useState('') \n    : useState(task.text);\n  const [description, setDescription] = type === 'add' \n    ? useState('')\n    : useState(task.description);\n  const [date, setDate] = type === 'add' \n    ? useState(new Date()) \n    : useState(task.date);\n  const [disabled, setDisabled] = useState(true);\n\n  const title = type === 'add' \n    ? <Text style={styles.title}>Новая задача</Text> \n    : <Text style={styles.title}>Редактировать</Text>;\n\n  const setDefaults = () => {\n    setText('');\n    setDescription('');\n  }\n\n  const onAdd = () => {\n    addTask(text, date, description);\n    closeModal();\n    setDefaults();\n  }\n\n  const onEdit = () => {\n    editTask(text, date, description);\n    closeModal();\n    setDefaults();\n  }\n\n  useEffect(() => {\n    if (text.trim() && date) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  })\n\n  const button = (\n    <> \n      {\n        type === 'add'\n          ? <Button \n              color={colors.BLUE} \n              title=\"Добавить\"\n              onPress={onAdd}\n              disabled={disabled}\n            />\n          : <Button \n              color={colors.BLUE} \n              title=\"Редактировать\"\n              onPress={onEdit}\n              disabled={disabled}\n            />\n      }\n    </>\n  )\n\n  return (\n    <View style={styles.container}>\n      {title}\n      <TextInput \n        style={styles.input}\n        value={text}\n        onChangeText={text => setText(text)}\n        placeholder=\"Название задачи\"\n      />\n      <TextInput \n        style={{...styles.input, ...styles.textArea}}\n        value={description}\n        onChangeText={text => setDescription(text)}\n        multiline={true}\n        placeholder=\"Описание задачи\"\n      />\n      <DTPicker \n        date={date}\n        setDate={setDate}\n      />\n      <View style={styles.buttons}>\n        {button}\n        <Button \n          color={colors.DANGER} \n          title=\"Закрыть\"\n          onPress={closeModal}\n        />\n      </View>\n    </View>\n  )\n}\n\nexport default TaskForm;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    backgroundColor: '#fff',\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    borderRadius: 20,\n    backgroundColor: colors.ACCENT,\n  },\n  title: {\n    fontSize: 25,\n    textAlign: \"center\",\n    color: '#fff',\n    marginBottom: 20,\n  },\n  input: {\n    backgroundColor: colors.LIGHTBLUE,\n    borderRadius: 15,\n    height: 50,\n    marginBottom: 15,\n    paddingHorizontal: 15,\n    fontSize: 20,\n    lineHeight: 27,\n  },\n  textArea: {\n    height: 120,\n  },\n  buttons: {\n  },\n})"]},"metadata":{},"sourceType":"module"}